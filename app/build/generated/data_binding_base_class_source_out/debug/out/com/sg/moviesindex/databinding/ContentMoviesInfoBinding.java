// Generated by data binding compiler. Do not edit!
package com.sg.moviesindex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import antonkozyriatskyi.circularprogressindicator.CircularProgressIndicator;
import br.com.simplepass.loadingbutton.customViews.CircularProgressButton;
import com.google.android.material.chip.ChipGroup;
import com.sg.moviesindex.R;
import com.sg.moviesindex.model.tmdb.Movie;
import com.varunest.sparkbutton.SparkButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ContentMoviesInfoBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout ad;

  @NonNull
  public final CircularProgressButton btnId;

  @NonNull
  public final ImageView button1;

  @NonNull
  public final TextView casts;

  @NonNull
  public final LinearLayout castsLayout;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final CircularProgressIndicator circularProgress;

  @NonNull
  public final LinearLayout llMovieRating;

  @NonNull
  public final TextView reviews;

  @NonNull
  public final RecyclerView rvCasts;

  @NonNull
  public final RecyclerView rvReviews;

  @NonNull
  public final SparkButton sparkButton;

  @NonNull
  public final TextView tvGenre;

  @NonNull
  public final TextView tvLanguage;

  @NonNull
  public final TextView tvMovieTitle;

  @NonNull
  public final TextView tvOverview;

  @NonNull
  public final TextView tvPlotsynopsis;

  @NonNull
  public final TextView tvPopularity;

  @NonNull
  public final TextView tvReleaseDate;

  @NonNull
  public final TextView tvStatus;

  @Bindable
  protected Movie mContentMovie;

  @Bindable
  protected CheckBox mCheckBox;

  @Bindable
  protected String mLocale;

  protected ContentMoviesInfoBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout ad, CircularProgressButton btnId, ImageView button1, TextView casts,
      LinearLayout castsLayout, ChipGroup chipGroup, CircularProgressIndicator circularProgress,
      LinearLayout llMovieRating, TextView reviews, RecyclerView rvCasts, RecyclerView rvReviews,
      SparkButton sparkButton, TextView tvGenre, TextView tvLanguage, TextView tvMovieTitle,
      TextView tvOverview, TextView tvPlotsynopsis, TextView tvPopularity, TextView tvReleaseDate,
      TextView tvStatus) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ad = ad;
    this.btnId = btnId;
    this.button1 = button1;
    this.casts = casts;
    this.castsLayout = castsLayout;
    this.chipGroup = chipGroup;
    this.circularProgress = circularProgress;
    this.llMovieRating = llMovieRating;
    this.reviews = reviews;
    this.rvCasts = rvCasts;
    this.rvReviews = rvReviews;
    this.sparkButton = sparkButton;
    this.tvGenre = tvGenre;
    this.tvLanguage = tvLanguage;
    this.tvMovieTitle = tvMovieTitle;
    this.tvOverview = tvOverview;
    this.tvPlotsynopsis = tvPlotsynopsis;
    this.tvPopularity = tvPopularity;
    this.tvReleaseDate = tvReleaseDate;
    this.tvStatus = tvStatus;
  }

  public abstract void setContentMovie(@Nullable Movie contentMovie);

  @Nullable
  public Movie getContentMovie() {
    return mContentMovie;
  }

  public abstract void setCheckBox(@Nullable CheckBox checkBox);

  @Nullable
  public CheckBox getCheckBox() {
    return mCheckBox;
  }

  public abstract void setLocale(@Nullable String locale);

  @Nullable
  public String getLocale() {
    return mLocale;
  }

  @NonNull
  public static ContentMoviesInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.content_movies_info, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ContentMoviesInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ContentMoviesInfoBinding>inflateInternal(inflater, R.layout.content_movies_info, root, attachToRoot, component);
  }

  @NonNull
  public static ContentMoviesInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.content_movies_info, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ContentMoviesInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ContentMoviesInfoBinding>inflateInternal(inflater, R.layout.content_movies_info, null, false, component);
  }

  public static ContentMoviesInfoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ContentMoviesInfoBinding bind(@NonNull View view, @Nullable Object component) {
    return (ContentMoviesInfoBinding)bind(component, view, R.layout.content_movies_info);
  }
}
